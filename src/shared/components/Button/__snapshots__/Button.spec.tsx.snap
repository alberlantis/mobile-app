// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Button should render primary extra-large button 1`] = `
<View
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": undefined,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={true}
  onBlur={[Function]}
  onClick={[Function]}
  onFocus={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    {
      "alignItems": "center",
      "height": 50,
      "justifyContent": "center",
      "marginBottom": undefined,
      "marginLeft": undefined,
      "marginRight": undefined,
      "marginTop": undefined,
      "width": "100%",
    }
  }
  testID="button-pressable-id"
>
  <RNSVGSvgView
    bbHeight={50}
    bbWidth="100%"
    focusable={false}
    height={50}
    style={
      [
        {
          "backgroundColor": "transparent",
          "borderWidth": 0,
        },
        {
          "bottom": 0,
          "left": 0,
          "position": "absolute",
          "right": 0,
          "top": 0,
        },
        {
          "flex": 0,
          "height": 50,
          "width": "100%",
        },
      ]
    }
    width="100%"
  >
    <RNSVGGroup
      fill={
        {
          "payload": 4278190080,
          "type": 0,
        }
      }
    >
      <RNSVGDefs>
        <RNSVGLinearGradient
          gradient={
            [
              0,
              -34743,
              1,
              -29381,
            ]
          }
          gradientTransform={null}
          gradientUnits={0}
          name="linGrad"
          x1="0%"
          x2="100%"
          y1="0%"
          y2="100%"
        />
        <RNSVGClipPath
          fill={
            {
              "payload": 4278190080,
              "type": 0,
            }
          }
          name="clipGrad"
        >
          <RNSVGRect
            fill={
              {
                "payload": 4278190080,
                "type": 0,
              }
            }
            height={50}
            rx="25"
            ry="50"
            width="100%"
            x="0"
            y="0"
          />
        </RNSVGClipPath>
      </RNSVGDefs>
      <RNSVGRect
        clipPath="clipGrad"
        fill={
          {
            "brushRef": "linGrad",
            "type": 1,
          }
        }
        height={50}
        propList={
          [
            "fill",
          ]
        }
        width="100%"
        x="0"
        y="0%"
      />
    </RNSVGGroup>
  </RNSVGSvgView>
  <View
    onLayout={[Function]}
    style={
      {
        "alignItems": "center",
        "flexDirection": "row",
        "justifyContent": "center",
      }
    }
  >
    <Text
      style={
        {
          "color": "#FFF",
          "fontSize": 16,
          "fontWeight": "medium",
        }
      }
    >
      primary large
    </Text>
  </View>
</View>
`;

exports[`Button should render primary large button 1`] = `
<View
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": undefined,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={true}
  onBlur={[Function]}
  onClick={[Function]}
  onFocus={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    {
      "alignItems": "center",
      "height": 50,
      "justifyContent": "center",
      "marginBottom": undefined,
      "marginLeft": undefined,
      "marginRight": undefined,
      "marginTop": undefined,
      "width": 300,
    }
  }
  testID="button-pressable-id"
>
  <RNSVGSvgView
    bbHeight={50}
    bbWidth={300}
    focusable={false}
    height={50}
    style={
      [
        {
          "backgroundColor": "transparent",
          "borderWidth": 0,
        },
        {
          "bottom": 0,
          "left": 0,
          "position": "absolute",
          "right": 0,
          "top": 0,
        },
        {
          "flex": 0,
          "height": 50,
          "width": 300,
        },
      ]
    }
    width={300}
  >
    <RNSVGGroup
      fill={
        {
          "payload": 4278190080,
          "type": 0,
        }
      }
    >
      <RNSVGDefs>
        <RNSVGLinearGradient
          gradient={
            [
              0,
              -34743,
              1,
              -29381,
            ]
          }
          gradientTransform={null}
          gradientUnits={0}
          name="linGrad"
          x1="0%"
          x2="100%"
          y1="0%"
          y2="100%"
        />
        <RNSVGClipPath
          fill={
            {
              "payload": 4278190080,
              "type": 0,
            }
          }
          name="clipGrad"
        >
          <RNSVGRect
            fill={
              {
                "payload": 4278190080,
                "type": 0,
              }
            }
            height={50}
            rx="25"
            ry="50"
            width={300}
            x="0"
            y="0"
          />
        </RNSVGClipPath>
      </RNSVGDefs>
      <RNSVGRect
        clipPath="clipGrad"
        fill={
          {
            "brushRef": "linGrad",
            "type": 1,
          }
        }
        height={50}
        propList={
          [
            "fill",
          ]
        }
        width={300}
        x="0"
        y="0%"
      />
    </RNSVGGroup>
  </RNSVGSvgView>
  <View
    onLayout={[Function]}
    style={
      {
        "alignItems": "center",
        "flexDirection": "row",
        "justifyContent": "center",
      }
    }
  >
    <Text
      style={
        {
          "color": "#FFF",
          "fontSize": 16,
          "fontWeight": "medium",
        }
      }
    >
      primary large
    </Text>
  </View>
</View>
`;

exports[`Button should render secondary extra-large button 1`] = `
<View
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": undefined,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={true}
  onBlur={[Function]}
  onClick={[Function]}
  onFocus={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    {
      "alignItems": "center",
      "height": 50,
      "justifyContent": "center",
      "marginBottom": undefined,
      "marginLeft": undefined,
      "marginRight": undefined,
      "marginTop": undefined,
      "width": "100%",
    }
  }
  testID="button-pressable-id"
>
  <RNSVGSvgView
    bbHeight={50}
    bbWidth="100%"
    focusable={false}
    height={50}
    style={
      [
        {
          "backgroundColor": "transparent",
          "borderWidth": 0,
        },
        {
          "bottom": 0,
          "left": 0,
          "position": "absolute",
          "right": 0,
          "top": 0,
        },
        {
          "flex": 0,
          "height": 50,
          "width": "100%",
        },
      ]
    }
    width="100%"
  >
    <RNSVGGroup
      fill={
        {
          "payload": 4278190080,
          "type": 0,
        }
      }
    >
      <RNSVGDefs>
        <RNSVGLinearGradient
          gradient={
            [
              0,
              -11245864,
              1,
              -11245864,
            ]
          }
          gradientTransform={null}
          gradientUnits={0}
          name="linGrad"
          x1="0%"
          x2="100%"
          y1="0%"
          y2="100%"
        />
        <RNSVGClipPath
          fill={
            {
              "payload": 4278190080,
              "type": 0,
            }
          }
          name="clipGrad"
        >
          <RNSVGRect
            fill={
              {
                "payload": 4278190080,
                "type": 0,
              }
            }
            height={50}
            rx="25"
            ry="50"
            width="100%"
            x="0"
            y="0"
          />
        </RNSVGClipPath>
      </RNSVGDefs>
      <RNSVGRect
        clipPath="clipGrad"
        fill={
          {
            "brushRef": "linGrad",
            "type": 1,
          }
        }
        height={50}
        propList={
          [
            "fill",
          ]
        }
        width="100%"
        x="0"
        y="0%"
      />
    </RNSVGGroup>
  </RNSVGSvgView>
  <View
    onLayout={[Function]}
    style={
      {
        "alignItems": "center",
        "flexDirection": "row",
        "justifyContent": "center",
      }
    }
  >
    <Text
      style={
        {
          "color": "#FFF",
          "fontSize": 16,
          "fontWeight": "medium",
        }
      }
    >
      secondary large
    </Text>
  </View>
</View>
`;

exports[`Button should render secondary large button 1`] = `
<View
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": undefined,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={true}
  onBlur={[Function]}
  onClick={[Function]}
  onFocus={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    {
      "alignItems": "center",
      "height": 50,
      "justifyContent": "center",
      "marginBottom": undefined,
      "marginLeft": undefined,
      "marginRight": undefined,
      "marginTop": undefined,
      "width": 300,
    }
  }
  testID="button-pressable-id"
>
  <RNSVGSvgView
    bbHeight={50}
    bbWidth={300}
    focusable={false}
    height={50}
    style={
      [
        {
          "backgroundColor": "transparent",
          "borderWidth": 0,
        },
        {
          "bottom": 0,
          "left": 0,
          "position": "absolute",
          "right": 0,
          "top": 0,
        },
        {
          "flex": 0,
          "height": 50,
          "width": 300,
        },
      ]
    }
    width={300}
  >
    <RNSVGGroup
      fill={
        {
          "payload": 4278190080,
          "type": 0,
        }
      }
    >
      <RNSVGDefs>
        <RNSVGLinearGradient
          gradient={
            [
              0,
              -11245864,
              1,
              -11245864,
            ]
          }
          gradientTransform={null}
          gradientUnits={0}
          name="linGrad"
          x1="0%"
          x2="100%"
          y1="0%"
          y2="100%"
        />
        <RNSVGClipPath
          fill={
            {
              "payload": 4278190080,
              "type": 0,
            }
          }
          name="clipGrad"
        >
          <RNSVGRect
            fill={
              {
                "payload": 4278190080,
                "type": 0,
              }
            }
            height={50}
            rx="25"
            ry="50"
            width={300}
            x="0"
            y="0"
          />
        </RNSVGClipPath>
      </RNSVGDefs>
      <RNSVGRect
        clipPath="clipGrad"
        fill={
          {
            "brushRef": "linGrad",
            "type": 1,
          }
        }
        height={50}
        propList={
          [
            "fill",
          ]
        }
        width={300}
        x="0"
        y="0%"
      />
    </RNSVGGroup>
  </RNSVGSvgView>
  <View
    onLayout={[Function]}
    style={
      {
        "alignItems": "center",
        "flexDirection": "row",
        "justifyContent": "center",
      }
    }
  >
    <Text
      style={
        {
          "color": "#FFF",
          "fontSize": 16,
          "fontWeight": "medium",
        }
      }
    >
      secondary large
    </Text>
  </View>
</View>
`;
