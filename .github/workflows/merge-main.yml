name: Bump Version and Upload Build on Merge to Main

permissions:
  contents: write

on:
  pull_request:
    types: [closed]
    branches:
      - main

jobs:
  prebuild-app:
    if: github.event.pull_request.merged == true && github.event.pull_request.base.ref == 'main'
    runs-on: ubuntu-latest
    outputs:
      is-commit: ${{ steps.commit_changes.outputs.IS_COMMIT }}
      sha: ${{ steps.commit_changes.outputs.SHA }}
  
    steps:
      - name: 🏎️ Check out code
        uses: actions/checkout@v4
        with:
          persist-credentials: false # We'll re-authenticate for the commit

      - name: 🏗 Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18.x' # or the version you're using

      - name: 📦 Install dependencies
        run: yarn install
          
      - name: 📲 Prebuild App (prod)
        run: yarn prebuild:prod

      - name: 🚀 Commit & Push changes
        id: commit_changes
        run: |
          if git diff-index --quiet HEAD --; then
            echo "Working tree is clean. Nothing to commit ✅..."
            echo "IS_COMMIT=false" >> $GITHUB_OUTPUT
            exit 0
          else
            git config --global user.name "GitHub Actions"
            git config --global user.email "actions@github.com"
            git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}
            git add .
            git commit -m "chore: bump version to $(jq -r .version < package.json)(prod)" --no-verify
            git push origin HEAD:${{ github.ref }}
            echo "IS_COMMIT=true" >> $GITHUB_OUTPUT
            echo "SHA=$(git rev-parse HEAD)" >> $GITHUB_OUTPUT
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  upload-ios-build:
    if: github.event.pull_request.merged == true && github.event.pull_request.base.ref == 'main' && needs.prebuild-app.outputs.is-commit == 'true'
    needs: prebuild-app
    runs-on: macos-latest
    steps:
      - name: 🏎️ Check out code
        uses: actions/checkout@v4
        with:
          ref: ${{ needs.prebuild-app.outputs.sha }}
          fetch-depth: 0

      - name: 🏗 Setup Node
        uses: actions/setup-node@v3
        with:
            node-version: 18.x
            cache: yarn

      - name: 🏗 Setup EAS
        uses: expo/expo-github-action@v8
        with:
          eas-version: latest
          token: ${{ secrets.EXPO_TOKEN }}

      - name: 💎 Install CocoaPods
        run: sudo gem install cocoapods

      - name: 📦 Install dependencies
        run: yarn install

      - name: 📲 Build iOS (PROD)
        run: yarn ios:build:prod --non-interactive
  
  upload-android-build:
    if: github.event.pull_request.merged == true && github.event.pull_request.base.ref == 'main' && needs.prebuild-app.outputs.is-commit == 'true'
    needs: prebuild-app
    runs-on: ubuntu-latest
    steps:
      - name: 🏎️ Check out code
        uses: actions/checkout@v4
        with:
          ref: ${{ needs.prebuild-app.outputs.sha }}
          fetch-depth: 0

      - name: 🏗 Setup Node
        uses: actions/setup-node@v3
        with:
            node-version: 18.x
            cache: yarn
      
      - name: ☕ Setup JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
      
      - name: 🏗 Setup EAS
        uses: expo/expo-github-action@v8
        with:
          eas-version: latest
          token: ${{ secrets.EXPO_TOKEN }}

      - name: 📦 Install dependencies
        run: yarn install

      - name: 📲 Build Android (PROD)
        run: yarn android:build:prod --non-interactive

  publish-expo:
      if: github.event.pull_request.merged == true && github.event.pull_request.base.ref == 'main' && needs.prebuild-app.outputs.is-commit == 'true'
      needs: prebuild-app
      runs-on: ubuntu-latest
      steps:
        - name: 🏎️ Check out code
          uses: actions/checkout@v4
          with:
            ref: ${{ needs.prebuild-app.outputs.sha }}
            fetch-depth: 0

        - name: 🏗 Setup Node
          uses: actions/setup-node@v3
          with:
            node-version: 18.x
            cache: yarn

        - name: 🏗 Setup EAS
          uses: expo/expo-github-action@v8
          with:
            eas-version: latest
            token: ${{ secrets.EXPO_TOKEN }}

        - name: 📦 Install dependencies
          run: yarn install

        - name: 🚀 Create update
          run: yarn expo:update:prod
